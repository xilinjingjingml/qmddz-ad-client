// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

// Note: Current format version is experiment, the format may be changed.
// The future format may not be compatible, you may need to update the script manually.

// 注意：当前版本的格式是实验性的，之后还会进行修改。
// 后续版本的格式不保证兼容当前格式，可能需要手动升级到最新版本。，
CCEffect %{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
    discolor: {
      type: color4
      value: [0, 0, 0, 0]
    }
  }
%}

%% vs {

precision highp float;

uniform mat4 cc_matViewProj;
uniform mat4 cc_matWorld;

attribute vec3 a_position;
attribute lowp vec4 a_color;
attribute mediump vec2 a_uv0;
varying mediump vec2 v_uv0;
varying lowp vec4 v_color;

void main () {
  mat4 mvp = cc_matViewProj * cc_matWorld;
  v_uv0 = a_uv0;
  v_color = a_color;

  gl_Position = mvp * vec4(a_position, 1);
}

}

%% fs {

precision highp float;

uniform sampler2D texture;
uniform vec4 discolor;
varying mediump vec2 v_uv0;
varying lowp vec4 v_color;

void main () {
  vec4 color = texture2D(texture, v_uv0);
  vec3 scale = normalize(vec3(discolor.r, discolor.g, discolor.b));
  float gray = scale.r*color.r + scale.g*color.g + scale.b*color.b;
  vec4 newColor = vec4(gray, gray, gray, color.a) * discolor;
  
  gl_FragColor = newColor;
}

}
